/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Bohdan Lvov (https://sketchfab.com/ostapblendercg)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/blue-whale-textured-d24d19021c724c3a9134eebcb76b0e0f
title: Blue Whale - Textured
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useSphere } from "@react-three/cannon";
import { useFrame } from "@react-three/fiber";
import { Vector3 } from "three";
let r = 0;
export default function BlueWhale({ ...props }) {
  const rRef = useRef();
  const [pRef, pApi] = useSphere(() => ({
    type: "Kinematic",
    mass: 1,
    args: [1],
    ...props,
  }));
  const { nodes, materials, animations } = useGLTF(
    "/oceans/blueWhale/scene.gltf"
  );
  const { actions } = useAnimations(animations, pRef);
  useEffect(() => {
    actions["Swimming"].play();
  }, []);
  useFrame(() => {
    if (rRef.current) {
      const [tX, tY, tZ] = rRef.current.getWorldPosition(new Vector3());
      const [bX, bY, bZ] = pRef.current.getWorldPosition(new Vector3());
      pRef.current.lookAt(tX, tY, -tZ);
      pApi.rotation.set(0, (r -= 0.0005), 0);
      pApi.velocity.set((tX - bX) * 4, (tY - bY) * 4, (tZ - bZ) * 4);
      //if (bX < -100) pApi.position.set(100, bY, bZ);
      // if (bX < -300) pApi.position.set(490, bY, bZ);
      ////if (bZ > 1000) pApi.position.set(bX, bY, -1000);
      // if (bZ < -1500) pApi.position.set(1490, bY, bZ);
      //console.log(bZ);
      //X -300 500
    }
  });

  return (
    <group ref={pRef} {...props} dispose={null}>
      <mesh ref={rRef} name="rotation_pos" position={[0, 0, 50]}></mesh>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={286.42}>
          <group name="WhaleAnim03fbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="locator3"
                  position={[0, 0.34, 0.67]}
                  rotation={[0.04, 0, 0]}>
                  <group name="Object_7">
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_36" />
                    <skinnedMesh
                      castShadow
                      name="Object_37"
                      geometry={nodes.Object_37.geometry}
                      material={materials.lambert1}
                      skeleton={nodes.Object_37.skeleton}
                    />
                  </group>
                </group>
                <group name="pSphere2" position={[2.06, 0.38, 1.03]} />
                <group name="polySurface1" />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/oceans/blueWhale/scene.gltf");
